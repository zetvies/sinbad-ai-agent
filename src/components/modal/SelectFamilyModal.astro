---
// Icons
import XIcon from "../../assets/tabler-icons/x.astro";
import SearchIcon from "../../assets/tabler-icons/search.astro";
import CircleCheckIcon from "../../assets/tabler-icons/circle-check.astro";

const familyList = [
  { name: "Yes", value: "yes" },
  { name: "No", value: "no" },
];
---

<div
  id="selectFamilyModal"
  class={`hidden absolute top-0 left-0 w-full min-h-screen z-50`}
>
  <button
    id="closeModalButton"
    class="absolute top-0 left-0 w-full h-full z-11 bg-transparent-black"
  ></button>
  <div
    class="absolute bottom-0 left-0 w-full min-h-[50svh] h-fit p-4 z-12 bg-white"
  >
    <div class="flex items-center justify-between mb-3">
      <div class="ibm-plex-mono-semibold">Select Family Type</div>
      <button id="closeModalButton" class="p-1 z-12 rounded-full bg-grey">
        <XIcon className="h-5" />
      </button>
    </div>
    <div class="flex flex-col">
      <form class="w-full">
        <div class="relative">
          <div
            class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none"
          >
            <SearchIcon className="h-5" />
          </div>
          <input
            type="search"
            id="default-search"
            class="block w-full px-4 py-2 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg focus:outline-none"
            placeholder="Search Family here.."
          />
        </div>
      </form>
      <div class="flex-1 my-2 min-h-[40svh] max-h-[40svh] overflow-auto">
        {
          familyList.map((family) => (
            <button
              id={family.value}
              class="selectFamilyButton flex items-center space-x-2 w-full p-2 hover:bg-white-100"
            >
              <div class="ibm-plex-mono-regular text-[.9em]">{family.name}</div>

              <CircleCheckIcon
                id={`FamilyCheck-${family.value}`}
                className={`FamilyCheck hidden h-5 fill-dark-green`}
              />
            </button>
          ))
        }
      </div>
      <a href="/agent">
        <button
          disabled
          id="submitFamilyButton"
          class="w-full bg-gray-100 p-2 rounded-full text-gray-400 text-[.9em]"
        >
          Select
        </button>
      </a>
    </div>
  </div>
</div>
<script>
  // Close the modal
  const closeModalButtons = document.querySelectorAll("#closeModalButton");
  const selectFamilyModal = document.getElementById("selectFamilyModal");

  closeModalButtons.forEach((e) => {
    e.addEventListener("click", () => {
      selectFamilyModal.style.display = "none";
    });
  });

  // Select Family
  const selectFamilyButtons = document.querySelectorAll(".selectFamilyButton");
  const submitButton = document.getElementById(
    "submitFamilyButton"
  ) as HTMLButtonElement;
  let selectedFamily = "";
  selectFamilyButtons.forEach((e) => {
    e.addEventListener("click", () => {
      // Hide previously checked Family if exists, and show recently selected.
      if (selectedFamily) {
        const previousCheck = document.getElementById(
          "FamilyCheck-" + selectedFamily
        );
        previousCheck.style.display = "none";
      }
      const currentCheck = document.getElementById("FamilyCheck-" + e.id);
      currentCheck.style.display = "block";
      selectedFamily = e.id;

      // Allow submit once Family is selected
      submitButton.disabled = false;
      submitButton.className =
        "w-full bg-dark-green p-2 rounded-full text-white text-[.9em]";
    });
  });
</script>
