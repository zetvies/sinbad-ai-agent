---
// Icons
import XIcon from "../../assets/tabler-icons/x.astro";
import SearchIcon from "../../assets/tabler-icons/search.astro";
import CircleCheckIcon from "../../assets/tabler-icons/circle-check.astro";

const supportedLanguage = [
  { english_name: "Bahasa", country_code: "id", name: "Bahasa Indonesia" },
  { english_name: "Urdu", country_code: "pk", name: "اُردُو" },
  { english_name: "Hindi", country_code: "in", name: "हिन्दी" },
  { english_name: "Tamil", country_code: "in", name: "தமிழ்" },
  { english_name: "Bangla", country_code: "bd", name: "বাংলা" },
  { english_name: "Javanese", country_code: "id", name: "Bahasa Jawa" },
  { english_name: "English", country_code: "gb", name: "English" },
  { english_name: "Arabic", country_code: "sa", name: "العربية" },
];

const { url } = Astro.params;
---

<div
  id="selectLanguageModal"
  class={`hidden absolute bottom-0 left-0 w-full h-[65svh] z-50 bg-white flex-col p-4`}
>
  <div class="flex items-center justify-between mb-3">
    <div class="ibm-plex-mono-semibold">Select Language</div>
    <button id="closeModalButton" class="p-1 z-12 rounded-full bg-grey">
      <XIcon className="h-5" />
    </button>
  </div>
  <div class="flex flex-col h-full">
    <form class="w-full">
      <div class="relative">
        <div
          class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none"
        >
          <SearchIcon className="h-5" />
        </div>
        <input
          type="search"
          id="default-search"
          class="block w-full px-4 py-2 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg focus:outline-none"
          placeholder="Search Language here.."
        />
      </div>
    </form>
    <div class="flex-1 my-2 min-h-[40svh] max-h-[40svh] overflow-auto">
      {
        supportedLanguage.map((lang) => (
          <button
            id={lang.english_name}
            class="selectLanguageButton flex items-center space-x-2 w-full p-2 hover:bg-white-100"
          >
            <div
              class={`flag-${lang.country_code} w-7 h-fit flex items-center emoji text-[1.1em]`}
            />
            <div class="ibm-plex-mono-regular text-[.9em]">{lang.name}</div>

            <CircleCheckIcon
              id={`languageCheck-${lang.english_name}`}
              className={`languageCheck hidden h-5 fill-dark-green`}
            />
          </button>
        ))
      }
    </div>
    <a href={url ? url : "/agent"}>
      <button
        disabled
        id="submitLanguageButton"
        class="w-full bg-gray-100 p-2 rounded-full text-gray-400 text-[.9em]"
      >
        Select
      </button>
    </a>
  </div>
</div>
<script>
  // Close the modal
  const closeModalButtons = document.querySelectorAll("#closeModalButton");
  const selectLanguageModal = document.getElementById("selectLanguageModal");

  closeModalButtons.forEach((e) => {
    e.addEventListener("click", () => {
      selectLanguageModal.style.display = "none";
    });
  });

  // Select language
  const selectLanguageButtons = document.querySelectorAll(
    ".selectLanguageButton"
  );
  const submitButton = document.getElementById(
    "submitLanguageButton"
  ) as HTMLButtonElement;
  let selectedLanguage = "";
  selectLanguageButtons.forEach((e) => {
    e.addEventListener("click", () => {
      // Hide previously checked language if exists, and show recently selected.
      if (selectedLanguage) {
        const previousCheck = document.getElementById(
          "languageCheck-" + selectedLanguage
        );
        previousCheck.style.display = "none";
      }
      const currentCheck = document.getElementById("languageCheck-" + e.id);
      currentCheck.style.display = "block";
      selectedLanguage = e.id;

      // Allow submit once language is selected
      submitButton.disabled = false;
      submitButton.className =
        "w-full bg-dark-green p-2 rounded-full text-white text-[.9em]";
    });
  });
</script>
